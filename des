from Crypto.Cipher import DES
from Crypto.Random import get_random_bytes
from Crypto.Util.Padding import pad, unpad

def encrypt_file(key, iv, input_file, output_file):
    cipher = DES.new(key, DES.MODE_CBC, iv)
    with open(input_file, 'rb') as f_in:
        data = f_in.read()
    encrypted_data = cipher.encrypt(pad(data, DES.block_size))
    with open(output_file, 'wb') as f_out:
        f_out.write(encrypted_data)

def decrypt_file(key, iv, input_file, output_file):
    cipher = DES.new(key, DES.MODE_CBC, iv)
    with open(input_file, 'rb') as f_in:
        encrypted_data = f_in.read()
    decrypted_data = unpad(cipher.decrypt(encrypted_data), DES.block_size)
    with open(output_file, 'wb') as f_out:
        f_out.write(decrypted_data)

# ---------- MAIN ----------
if __name__ == "__main__":
    text_file = "C:/Users/Anubhav/Desktop/DemoData.txt"
    encrypted_file = "C:/Users/Anubhav/Desktop/encrypteddata.txt"
    decrypted_file = "C:/Users/Anubhav/Desktop/decrypteddata.txt"

    # 8-byte DES key & IV (initialization vector)
    key = get_random_bytes(8)
    iv = bytes([22, 33, 11, 44, 55, 99, 66, 77])

    # Encrypt and decrypt
    encrypt_file(key, iv, text_file, encrypted_file)
    decrypt_file(key, iv, encrypted_file, decrypted_file)

    print("âœ… Encrypted and decrypted files created successfully.")
